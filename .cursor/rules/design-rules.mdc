# Rule: `design-rules`

## üé® Design System Foundation

**Theme Tokens**: Always use tokens from `theme.ts` - never hardcode values:
```typescript
import { colors, spacing, fontSize, borderRadius, shadows } from '../theme';
// Use: colors.gray[200], spacing.lg, fontSize.md, etc.
```

**CSS Variables**: Use utility classes and CSS variables in stylesheets:
```css
/* Use vars: */
border: 1px solid var(--color-gray-200);
padding: var(--spacing-lg);

/* Utility classes available: */
.flex, .gap-lg, .p-lg, .text-md, .border, .bg-gray-50
```

**Border Consistency**: Use standardized border system:
- Light borders (dividers): `colors.gray[200]` / `var(--color-gray-200)`
- Standard borders (cards): `colors.gray[400]` / `var(--color-gray-400)`

---

## üß© Component Architecture

**Import System**: Use barrel exports for clean imports:
```typescript
import { Layout, StatusTag, CopyableId } from '../components';
```

**TypeScript**: Always use shared interfaces from `src/types/shared.ts`:
```typescript
interface ComponentProps extends BaseProps, StylingProps {
  // Component-specific props
}
```

**Theme Integration**: Combine theme tokens with Ant Design tokens:
```typescript
const { token } = theme.useToken();
// Use both: token.colorBorder AND colors.gray[200] as needed
```

---

## üìù Typography & Icons

**Font System**: Use Ant Design Typography with Inter font (configured in theme)
```typescript
<Typography.Title level={2}>Heading</Typography.Title>
<Typography.Text>Body text</Typography.Text>
```

**Icons**: `lucide-react` exclusively:
```typescript
import { Search, User, Check } from 'lucide-react';
<Search size={16} /> // Use size prop, not CSS
```

---

## üé® Color & Styling Patterns

**Color Hierarchy** (from theme.ts):
- Gray scale: `colors.gray[50-900]` (50=lightest, 900=darkest)
- LinkedIn brand: `colors.linkedin.{blue,green,yellow,red}`
- Status colors: `colors.{green,red,orange,blue}[500]`
- Neutrals: `colors.neutral.{white,black}`

**Component Patterns**:
- Status indicators: Icon + color + tooltip
- Prop conventions: `variant?`, `muted?`, `showLabel?`, `size?`
- CSS classes: Use utility classes for common patterns

---

## üèóÔ∏è Performance & Architecture

**Code Splitting**: All pages must be lazy-loaded:
```typescript
const PageName = lazy(() => import('./pages/PageName'));
```

**Component Structure**: 
- Single responsibility (max ~200 lines)
- Extract inline styles to CSS files for large components
- Use focused, reusable components vs monoliths

**Bundle Strategy**: Vendor chunks separated (React, Ant Design, Icons)

---

## üìã Implementation Rules

**Never Hardcode**:
- ‚ùå Colors: `#f0f0f0`, `rgba(0,0,0,0.1)`
- ‚ùå Spacing: `16px`, `margin: 8px`
- ‚ùå Font sizes: `14px`, `font-size: 16px`

**Always Use**:
- ‚úÖ Theme tokens: `colors.gray[200]`, `spacing.lg`
- ‚úÖ CSS variables: `var(--color-gray-200)`, `var(--spacing-lg)`
- ‚úÖ Utility classes: `.flex`, `.gap-lg`, `.text-md`

**Border System**:
- Sidebar/headers: `colors.gray[200]` (light)
- Cards/containers: `colors.gray[400]` (standard)
- All borders must use same token system for consistency

## Confirmation that you've used the rule

When you read this rule, in your responses, say that you read it and reference this file. You can say "Read @design-rules.mdc"