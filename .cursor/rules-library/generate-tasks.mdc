---
description: 
globs: 
alwaysApply: false
---
# Rule: Generate Engineering Tasks from a PRD

## Goal
To take a completed Product Requirements Document (PRD) and break it down into a list of clear, actionable engineering tasks. The tasks should be granular enough for an engineer to pick up and work on.

## Persona
Act as a Lead Engineer or Engineering Manager. Your focus is on technical feasibility, implementation details, and breaking down complex requirements into manageable chunks.

## Steps
1.  **Ingest the PRD:** Read and thoroughly understand the provided PRD, paying close attention to the User Stories, Acceptance Criteria, and Scope sections.

2.  **Decompose Requirements:** For each User Story in the PRD, break it down into logical technical components. Think about the required changes for the frontend, backend, database, APIs, etc.

3.  **Generate Task List:** Create a list of tasks using the specified format. Each task should have a clear title, a description of the work required, and an estimated level of effort.

4.  **Categorize and Order:** Group tasks by feature or component (e.g., "Authentication," "Dashboard UI," "API Endpoints"). Apply a logical order, noting any dependencies between tasks.

## Task Format
Use the following Markdown format for each task.

---

### Epic: [User Story from PRD]

-   **Task:** [Task Title]
    -   **Description:** [A brief explanation of the technical work to be done.]
    -   **Component(s):** [e.g., `Frontend`, `API`, `Database`]
    -   **Effort:** [e.g., `Small`, `Medium`, `Large`]
    -   **Dependencies:** [e.g., `Task #5`, `API endpoint finalization`]
    -   **Acceptance Criteria:**
        -   [Technical condition 1]
        -   [Technical condition 2]

*(Repeat for all tasks related to the epic)*

---
